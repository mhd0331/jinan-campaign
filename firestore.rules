rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 공통 함수들
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // 캠페인 정보 (읽기 전용)
    match /campaigns/{campaignId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // 서명 데이터
    match /signatures/{signatureId} {
      allow create: if request.resource.data.keys().hasAll(['name', 'region', 'campaignId', 'agreePrivacy']) &&
                      request.resource.data.name is string &&
                      request.resource.data.name.size() >= 2 &&
                      request.resource.data.region is string &&
                      request.resource.data.agreePrivacy == true;
      
      allow read: if isAdmin() || 
                    (resource.data.isPublic == true && 
                     request.query.limit <= 10);
      
      allow update, delete: if false;
    }
    
    // 사용자 프로필
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // 게시글
    match /posts/{postId} {
      allow read: if resource.data.isActive == true || isAdmin();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.authorId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // 댓글
    match /comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.authorId);
      allow delete: if isOwner(resource.data.authorId) || isAdmin();
    }
    
    // 투표
    match /polls/{pollId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // 투표 기록
    match /poll_votes/{voteId} {
      allow create: if isAuthenticated() &&
                      request.resource.data.userId == request.auth.uid;
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow update, delete: if false;
    }
  }
}